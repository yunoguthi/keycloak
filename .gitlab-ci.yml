stages:
  - build
  - deploy

variables:
  DOCKER_COMPOSE_VERSION: "1.27.4"  # Pode ajustar conforme necess√°rio

before_script:
  - apt-get update -qy
  - apt-get install -y docker-compose

build:
  image: docker:19.03.12
  stage: build
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    #- docker build -t keycloak .
    #- docker images
    #- echo $REGISTRY_PASSWD | docker login -u $REGISTRY_USER --password-stdin registry.trf3.jus.br
    #- docker build --pull -t "registry.trf3.jus.br/webservice-contadoria/keycloak:$CI_COMMIT_TAG" .
    #- docker push "registry.trf3.jus.br/webservice-contadoria/keycloak:$CI_COMMIT_TAG"
    - docker-compose build
    - echo $REGISTRY_PASSWD | docker login -u $REGISTRY_USER --password-stdin registry.trf3.jus.br
    - docker-compose push "registry.trf3.jus.br/webservice-contadoria/keycloak:$CI_COMMIT_TAG"
  #when: manual
  allow_failure: true
  only:
    - tags


deploy-dev:
  image: bitnami/kubectl
  stage: deploy
  script:
    #- kubectl delete service keycloak-service -n webservice-contadoria  # Remover o Service antigo
    - sed -i "s/#TAG/$CI_COMMIT_TAG/g" k8s/myapp.yml
    - sed -i "s/#HOST/login.dev.trf3.jus.br/g" k8s/myapp.yml
    - sed -i "s/#TOKEN/$TOKEN/g" $KUBECONFIG_DEV
    - KUBECONFIG=$KUBECONFIG_DEV kubectl apply -f k8s/myapp.yml
  #when: manual
  only:
    - tags

deploy-prd:
  image: bitnami/kubectl
  stage: deploy
  script:
    - sed -i "s/#TAG/$CI_COMMIT_TAG/g" k8s/myapp.yml
    - sed -i "s/#HOST/keycloak.app.trf3.jus.br/g" k8s/myapp.yml
    - sed -i "s/#TOKEN/$TOKEN/g" $KUBECONFIG_PRD
    - KUBECONFIG=$KUBECONFIG_PRD kubectl apply -f k8s/myapp.yml
  when: manual
  only:
    - tags
